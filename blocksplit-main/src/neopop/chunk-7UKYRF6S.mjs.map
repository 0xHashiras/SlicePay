{"version":3,"sources":["../src/hooks/useLayout.ts","../src/hooks/useToggle.ts","../src/hooks/useScrollIntoView.ts"],"sourcesContent":["import * as React from 'react';\nimport { LayoutChangeEvent } from 'react-native';\n\nconst useLayout = () => {\n    const [layout, setLayout] = React.useState({\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n    });\n\n    const handleLayout = React.useCallback(\n        (event: LayoutChangeEvent) => setLayout(event.nativeEvent.layout),\n        [],\n    );\n\n    return {\n        handleLayout,\n        ...layout,\n    };\n};\n\nexport default useLayout;\n","import * as React from 'react';\n\ninterface UseToggleOptions {\n    isChecked?: boolean;\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst useToggle = ({ isChecked, onChange }: UseToggleOptions) => {\n    const [isToggleChecked, setIsToggleChecked] = React.useState(isChecked ?? false);\n\n    React.useEffect(() => {\n        if (typeof isChecked === 'boolean') {\n            setIsToggleChecked(isChecked);\n        }\n    }, [isChecked]);\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (onChange instanceof Function) {\n            onChange(event);\n        } else {\n            setIsToggleChecked(event.target.checked);\n        }\n    };\n\n    return { isChecked: isToggleChecked, handleChange };\n};\n\nexport default useToggle;\n","import * as React from 'react';\nimport { Platform } from 'react-native';\n\ninterface UseScrollIntoViewOptions {\n    ref?: React.MutableRefObject<any>;\n    scrollIntoView?: ScrollIntoViewOptions | boolean;\n}\n\nconst useScrollIntoView = ({ ref, scrollIntoView = false }: UseScrollIntoViewOptions) => {\n    React.useEffect(() => {\n        if (Platform.OS === 'web') {\n            if (scrollIntoView instanceof Object) {\n                ref?.current?.scrollIntoView(scrollIntoView);\n            } else {\n                ref?.current?.scrollIntoView();\n            }\n        }\n    }, [ref, scrollIntoView]);\n};\n\nexport default useScrollIntoView;\n"],"mappings":";AAAA;AAGA,IAAM,YAAY,MAAM;AACpB,QAAM,CAAC,QAAQ,aAAa,AAAM,eAAS;AAAA,IACvC,GAAG;AAAA,IACH,GAAG;AAAA,IACH,OAAO;AAAA,IACP,QAAQ;AAAA,EACZ,CAAC;AAED,QAAM,eAAe,AAAM,kBACvB,CAAC,UAA6B,UAAU,MAAM,YAAY,MAAM,GAChE,CAAC,CACL;AAEA,SAAO;AAAA,IACH;AAAA,IACA,GAAG;AAAA,EACP;AACJ;AAEA,IAAO,oBAAQ;;;ACtBf;AAOA,IAAM,YAAY,CAAC,EAAE,WAAW,eAAiC;AAC7D,QAAM,CAAC,iBAAiB,sBAAsB,AAAM,gBAAS,aAAa,KAAK;AAE/E,EAAM,iBAAU,MAAM;AAClB,QAAI,OAAO,cAAc,WAAW;AAChC,yBAAmB,SAAS;AAAA,IAChC;AAAA,EACJ,GAAG,CAAC,SAAS,CAAC;AAEd,QAAM,eAAe,CAAC,UAA+C;AACjE,QAAI,oBAAoB,UAAU;AAC9B,eAAS,KAAK;AAAA,IAClB,OAAO;AACH,yBAAmB,MAAM,OAAO,OAAO;AAAA,IAC3C;AAAA,EACJ;AAEA,SAAO,EAAE,WAAW,iBAAiB,aAAa;AACtD;AAEA,IAAO,oBAAQ;;;AC3Bf;AACA;AAOA,IAAM,oBAAoB,CAAC,EAAE,KAAK,iBAAiB,YAAsC;AACrF,EAAM,iBAAU,MAAM;AAT1B;AAUQ,QAAI,SAAS,OAAO,OAAO;AACvB,UAAI,0BAA0B,QAAQ;AAClC,yCAAK,YAAL,mBAAc,eAAe;AAAA,MACjC,OAAO;AACH,yCAAK,YAAL,mBAAc;AAAA,MAClB;AAAA,IACJ;AAAA,EACJ,GAAG,CAAC,KAAK,cAAc,CAAC;AAC5B;AAEA,IAAO,4BAAQ;","names":[]}